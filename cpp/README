TL;DR;
-------
run-once.sh runs your tests once

Before this will work you will need:
  - make and a C++ compiler (like gcc) is installed on your system and is in the PATH
  - The GTest framework in the directory gtest.
  - If your IDE does the compilation and linking, you should remove the first 3 lines
    in the run-once.sh file.

More Verbose Instructions
-------------------------

Create a clone of both GildedRose-Refactoring-Kata and googletest in a directory we'll call ${ROOT_INSTALL_DIR}:

    cd ${ROOT_INSTALL_DIR}
    git clone https://github.com/dmari/GildedRose-Refactoring-Kata
    git clone https://github.com/google/googletest

Using CMake
-----------
On Mac:
Make googletest by running make in subfolder googletest/googletest:

    cd googletest/googletest
	cmake .
	cmake --build .

Setup GildedRose:

    cd ${ROOT_INSTALL_DIR}/GildedRose-Refactoring-Kata/cpp
	cmake -DGTEST_ROOT=../../googletest/googletest .
	cmake --build .

On Windows:
Make googletest by running make in subfolder googletest/googletest:

    cd googletest/googletest
	cmake -G "Visual Studio 14 2015" .
	cmake --build .

Setup GildedRose:

    cd ${ROOT_INSTALL_DIR}/GildedRose-Refactoring-Kata/cpp
	cmake -G "Visual Studio 14 2015" -DGTEST_ROOT=../../googletest/googletest -DGTEST_LIBRARY=../../googletest/googletest/Debug/gtest.lib -DGTEST_MAIN_LIBRARY=../../googletest/googletest/Debug/gtest_main.lib .
	cmake --build .
	
Rebuilding and running the tests
--------------------------------

Then you should be able to run the tests:

    ./cmake-and-run.sh

If you have been successful, then you should see a failing test, "GildedRoseTest.Foo".
